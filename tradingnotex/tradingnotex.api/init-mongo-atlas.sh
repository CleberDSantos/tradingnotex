#!/bin/bash
# ================================================
# Script para inicializar o MongoDB Atlas
# ================================================

echo "üå©Ô∏è Inicializando MongoDB Atlas..."

# Esperar o container da API iniciar
sleep 10

# Verificar se a API est√° saud√°vel
if curl -f http://localhost:8080/health >/dev/null 2>&1; then
    echo "‚úÖ API est√° saud√°vel!"
    
    # Criar √≠ndices no MongoDB Atlas via API
    echo "üìä Criando √≠ndices no MongoDB Atlas..."
    
    # Aqui voc√™ pode adicionar comandos para criar √≠ndices via API
    # Por exemplo, usando o mongo shell dentro do container da API
    
    docker exec tradingnotex-api mongosh "$MONGODB_ATLAS_CONNECTION" --eval '
    db = db.getSiblingDB("TradingNoteX_Prod");

    // Criar √≠ndices para a cole√ß√£o Trades
    db.Trades.createIndex({ "ownerId": 1, "executedAtUTC": -1 });
    db.Trades.createIndex({ "ownerId": 1, "instrument": 1 });
    db.Trades.createIndex({ "ownerId": 1, "setup": 1 });

    // Criar √≠ndices para a cole√ß√£o Imports
    db.Imports.createIndex({ "ownerId": 1, "createdAt": -1 });

    // Criar √≠ndices para a cole√ß√£o RiskSettings
    db.RiskSettings.createIndex({ "ownerId": 1 });

    // Criar √≠ndices para a cole√ß√£o Users
    db.Users.createIndex({ "username": 1 }, { unique: true });
    db.Users.createIndex({ "sessionToken": 1 });

    print("√çndices criados com sucesso!");
    '
    
    echo "‚úÖ √çndices criados no MongoDB Atlas!"
else
    echo "‚ùå API n√£o est√° saud√°vel. Verifique os logs:"
    docker-compose logs tradingnotex-api | tail -20
fi
